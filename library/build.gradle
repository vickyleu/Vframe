apply plugin: 'com.android.library'
apply plugin: 'maven'
//apply plugin: 'com.novoda.bintray-release'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"


    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        cmake {
            cppFlags "-std=c++11 -frtti -fexceptions"
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    retrolambda {
        javaVersion JavaVersion.VERSION_1_6
    }

    //noinspection GroovyAssignabilityCheck
    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ndk {
                debuggable = true
            }
        }
        debug {
            debuggable = true
            shrinkResources false
            jniDebuggable = true
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }


}

task makeJar(type: Copy) {
    delete 'build/libs/elib.jar'
    from('build/intermediates/bundles/release/')
    into('build/libs/')
    include('classes.jar')
    rename('classes.jar', 'elib.jar')
}



makeJar.dependsOn(build)
//在终端执行生成JAR包
// gradlew makeJar

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'

    compile 'com.squareup.retrofit2:converter-gson:2+'
    compile 'com.squareup.retrofit2:adapter-rxjava:2+'
    compile 'com.android.support:appcompat-v7:23+'
    compile 'com.android.support:support-v4:23+'
    compile 'com.google.code.gson:gson:2+'
    compile 'com.android.support:recyclerview-v7:23+'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1+'
    compile 'com.squareup.retrofit2:retrofit:2+'
    compile 'io.reactivex:rxandroid:1+'
    compile 'io.reactivex:rxjava:1+'
    compile 'com.squareup.okio:okio:1+'
}

//gradlew assemble generateJavadoc
task generateJavadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    ext.cp = android.libraryVariants.collect { variant -> variant.javaCompile.classpath.files
    }
    classpath = files(ext.cp)
}


//publish {
//    bintrayUser = properties.getProperty("bintray.user")
//    bintrayKey = properties.getProperty("bintray.apikey")
//    dryRun = false
//    userOrg = 'vickyleu'
//    groupId = 'com.vickyleu'
//    artifactId = 'easy-framework'
//    publishVersion = '1.0.0'
//    desc = 'test 2'
//    website = 'https://github.com/vickyleu/easy-framework'
//}


group = PROJ_GROUP
version = PROJ_VERSION
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id DEVELOPER_ID
            name DEVELOPER_NAME
            email DEVELOPER_EMAIL
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId PROJ_ARTIFACTID
            pom {
                packaging 'aar'
            }
            pom.withXml {
                def root = asNode()
                root.appendNode('description', PROJ_DESCRIPTION)
                root.children().last() + pomConfig
            }
        }
    }
}

afterEvaluate {
    publishing.publications.mavenJava.artifact(bundleRelease)
}
Properties properties = new Properties();
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    publications = ['mavenJava']
    publish = true

    pkg {
        repo = 'maven'
        name = PROJ_NAME
        desc = PROJ_DESCRIPTION
        websiteUrl = PROJ_WEBSITEURL
        issueTrackerUrl = PROJ_ISSUETRACKERURL
        vcsUrl = PROJ_VCSURL
        licenses = ['Apache-2.0']
        publicDownloadNumbers = true
    }
}
