apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
android {
    def app='example'
    signingConfigs {
        config {
        }
    }
    compileSdkVersion 23
    buildToolsVersion "23.0.3"
    defaultConfig {
        applicationId "com.vicky.example"
        minSdkVersion 11
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    retrolambda {
        javaVersion JavaVersion.VERSION_1_6
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //修改生成的apk名字
    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def oldFile = output.outputFile

            if (app.equals(""))app='app'
            if (variant.buildType.name.equals('release')) {
                def releaseApkName = app +"-v"+ defaultConfig.versionName + "-code" + defaultConfig.versionCode+"-" + getDate() + '.apk'
                output.outputFile = new File(oldFile.parent, releaseApkName)
            }
            if (variant.buildType.name.equals('beta')) {
                def releaseApkName = oldFile.name.replace(".apk", "-v" + defaultConfig.versionName + "-build" + getDate() + ".apk")
                output.outputFile = new File(oldFile.parent, releaseApkName)
            }
            if (variant.buildType.name.equals('debug')) {
                def releaseApkName = app +"-v" + defaultConfig.versionName + "-debug" + ".apk"
                output.outputFile = new File(oldFile.parent, releaseApkName)
            }
        }
    }
}
//获取时间戳
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd-HHmm')
    return formattedDate
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile project(':library')
}
